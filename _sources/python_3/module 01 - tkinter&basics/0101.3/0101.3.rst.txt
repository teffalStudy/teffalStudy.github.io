1.3. Python "print()" и именование переменных
==============================================

Термины
-------------------------------------

**консольное приложение** - программа которая выполняется в режиме командной строки и/или выводит результат в консоль.


Базовый английский
-------------------------------------

| **print** - печать
| **expression** - выражение

Python "print()" - назначение
-------------------------------------

print() - данная команда используется для вывода текста в консоль. Также её удобно использовать для отладки приложений: поиска ошибок и проверки логики программы.

Синтаксис
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

  print(<expression>)

<expression> - выражения, которые стоят внутри круглых скобок, будут выведены на экран.

Выражения могут иметь вид:

* строки или строчного выражения;
* математического выражения;
* переменной;
* а также любой комбинацией упомянутых выражений.

Пример 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

  print("Hello!")

Результат выполнения::

  Hello!

Пример 2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

  print(2+2*2)

Результат выполнения::

  6

Пример 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

  message = "Hello Python world!"
  print(message)

Результат выполнения::

  Hello Python world!

Пример 4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

  message = "Hi"
  number = 3
  print(message, 2, '+', number)

Результат выполнения::

  Hi 2 + 3

Выбор имён переменных
-------------------------------------

При работе с переменными в языке Python необходимо соблюдать некоторые правила и рекомендации. Нарушение правил приведет к ошибке; рекомендации всего лишь помогают писать более понятный и удобочитаемый код. Работая с переменными, помните о следующем:

* Имена переменных могут состоять только из букв, цифр и символов подчеркивания. Они могут начинаться с буквы или символа подчеркивания, но не с цифры. Например, переменной можно присвоить имя **message_1**, но не **1_message**.
* Пробелы в именах переменных запрещены, а для разделения слов в именах переменных используются символы подчеркивания. Например, имя **greeting_message** допустимо, а имя **greeting message** вызовет ошибку.
* Не используйте имена функций и ключевые слова Python в качестве имен переменных; иначе говоря, не используйте слова, которые зарезервированы в Python для конкретной цели, например слово **print**.
* Чтобы имя переменной не совпало с ключевым словом Python, достаточто делать 2-х составные имена, объединенные нижним подчеркиванием. Пример: **print_text** или **first_name**.
* Имена переменных должны быть короткими, но содержательными. Например, имя **name** лучше чем **n**, имя **student_name** лучше **s_n**, а имя **name_length** лучше **length_of_persons_name**.
* Будьте внимательны при использовании строчной буквы **l** и прописной буквы **O**, потому что они похожи на цифры **1** и **0**.

Вероятно, вы не сразу научитесь создавать хорошие имена переменных, особенно когда ваши программы станут более сложными и интересными. Но когда вы начнете писать свои программы и читать код, написанный другими разработчиками, ваши имена переменных станут более содержательными.

.. note::
  Пока ограничьтесь именами переменных, записанными в нижнем регистре, т.е. строчными (маленькими) буквами. Использование символов верхнего регистра не приведет к ошибке, и все же пока лучше обойтись без них.


Упражнения
-------------------------------------

Напишите отдельную программу для выполнения каждого из следующих упражнений. Сохраните каждую программу в файле, имя которого подчиняется стандартным правилам Python по использованию строчных букв и символов подчеркивания – например, **simple_message.py** и **simple_messages.py**.

#. Простое сообщение: сохраните текстовое сообщение "Nice job!" в переменной и выведите его на экран.
#. Простые сообщения: сохраните сообщение "Why are you doing this?" в переменной и выведите это сообщение. Затем замените значение переменной сообщением "Because we can!" и выведите новое сообщение.
#. Вывести на экран пример: 2 + 2 = 4.

